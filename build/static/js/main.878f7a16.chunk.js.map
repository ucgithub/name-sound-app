{"version":3,"sources":["components/Navigation.tsx","components/recorder-controls/index.tsx","utils/format-time.ts","handlers/recorder-controls.ts","hooks/use-recorder.ts","components/App.tsx","components/Search.tsx","index.tsx"],"names":["Navigation","className","to","RecorderControls","seconds","minutes","recorderState","handlers","recordingMinutes","recordingSeconds","initRecording","startRecording","saveRecording","cancelRecording","title","onClick","icon","faTimes","disabled","faSave","size","faMicrophone","setRecorderState","a","navigator","mediaDevices","getUserMedia","audio","stream","prevState","mediaStream","console","log","initialState","mediaRecorder","useRecorder","useState","useEffect","recordingInterval","setInterval","clearInterval","MediaRecorder","recorder","chunks","state","start","ondataavailable","e","push","data","onstop","blob","Blob","type","audioUrl","window","name","file","File","blobClient","BlobServiceClient","getContainerClient","getBlockBlobClient","options","blobHTTPHeaders","blobContentType","uploadData","URL","createObjectURL","getAudioTracks","forEach","track","stop","dotenv","tablesUrl","sasToken","useStyles","makeStyles","createStyles","form","display","flexDirection","container","backgroundColor","position","top","left","transform","padding","textAlign","margin","button","color","sectionContainer","margingTop","paddingHorizontal","sectionTitle","fontSize","fontWeight","App","classes","dname","empid","fname","lname","pname","country","fileURL","values","setValues","locale","setLocale","handleChange","event","target","id","value","ttsToSpeaker","speechConfig","SpeechConfig","fromSubscription","speechSynthesisLanguage","audioConfig","AudioConfig","fromDefaultSpeakerOutput","synthesizer","SpeechSynthesizer","namepref","trim","speakTextAsync","result","audioData","updateAndUpsertEntities","client","TableClient","AzureSASCredential","entity","partitionKey","rowKey","FirstName","LastName","PreferredName","Locale","NameSoundUrl","createEntity","savePreference","blobService","containerClient","toBlobName","toString","TextField","onChange","defaultValue","label","select","variant","helperText","map","option","MenuItem","Button","startIcon","url","Search","setDeptName","setEmpId","setFirstName","setLastName","setPrefName","searchstr","setSearchString","getResults","getEntity","playAudio","Audio","play","fullWidth","InputProps","endAdornment","IconButton","SearchOutlined","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.878f7a16.chunk.js","sourcesContent":["import { InfoOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\nimport {NavLink}  from \"react-router-dom\";\n\nfunction Navigation(){\n    \n    return(\n        <div>\n                       \n            <NavLink className=\"nav-link\" to=\"/\">\n                Home\n                <span className=\"sr-only\">(current)</span>\n            </NavLink>\n        \n            <NavLink className=\"nav-link\" to=\"/search\">\n                Admin\n            </NavLink>          \n                \n        </div>\n    )\n}\n\nexport default Navigation;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMicrophone, faTimes, faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { formatMinutes, formatSeconds } from \"../../utils/format-time\";\nimport { RecorderControlsProps } from \"types/recorder\";\nimport \"./styles.css\";\n\nexport default function RecorderControls({ recorderState, handlers }: RecorderControlsProps) {\n  const { recordingMinutes, recordingSeconds, initRecording } = recorderState;\n  const { startRecording, saveRecording, cancelRecording } = handlers;\n\n  return (\n    <div className=\"controls-container\">\n      <div className=\"recorder-display\">\n        <div className=\"recording-time\">\n          {initRecording && <div className=\"recording-indicator\"></div>}\n          <span>{formatMinutes(recordingMinutes)}</span>\n          <span>:</span>\n          <span>{formatSeconds(recordingSeconds)}</span>\n        </div>\n        {initRecording && (\n          <div className=\"cancel-button-container\">\n            <button className=\"cancel-button\" title=\"Cancel recording\" onClick={cancelRecording}>\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"start-button-container\">\n        {initRecording ? (\n          <button\n            className=\"start-button\"\n            title=\"Save recording\"\n            disabled={recordingSeconds === 0}\n            onClick={saveRecording}\n          >\n            <FontAwesomeIcon icon={faSave} size=\"2x\" />\n          </button>\n        ) : (\n          <button className=\"start-button\" title=\"Start recording\" onClick={startRecording}>\n            <FontAwesomeIcon icon={faMicrophone} size=\"2x\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n","export function formatMinutes(minutes: number) {\n  return minutes < 10 ? `0${minutes}` : `${minutes}`;\n}\n\nexport function formatSeconds(seconds: number) {\n  return seconds < 10 ? `0${seconds}` : `${seconds}`;\n}\n","import { SetRecorder } from \"types/recorder\";\n\nexport async function startRecording(setRecorderState: SetRecorder) {\n  try {\n    const stream: MediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\n    setRecorderState((prevState) => {\n      return {\n        ...prevState,\n        initRecording: true,\n        mediaStream: stream,\n      };\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function saveRecording(recorder: any) {\n  if (recorder.state !== \"inactive\") recorder.stop();\n}\n","import { useState, useEffect } from \"react\";\nimport { startRecording, saveRecording } from \"handlers/recorder-controls\";\nimport { Recorder, Interval, AudioTrack, MediaRecorderEvent } from \"types/recorder\";\nimport { BlobServiceClient, ContainerClient} from '@azure/storage-blob';\n\nconst containerName = `pref-sounds`;\nconst sasToken = `?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupitfx&se=2022-06-04T11:04:15Z&st=2022-05-16T03:04:15Z&spr=https&sig=%2FE19l%2Fqu9HXhv4cC4B%2FKipxUWdSEF19J%2FrdKmnyYI%2Fg%3D`;\nconst storageAccountName = `namesounds`; \n\nconst initialState: Recorder = {\n  recordingMinutes: 0,\n  recordingSeconds: 0,\n  initRecording: false,\n  mediaStream: null,\n  mediaRecorder: null,\n  audio: null,\n};\n\nexport default function useRecorder() {\n  const [recorderState, setRecorderState] = useState<Recorder>(initialState);\n\n  useEffect(() => {\n    const MAX_RECORDER_TIME = 5;\n    let recordingInterval: Interval = null;\n\n    if (recorderState.initRecording)\n      recordingInterval = setInterval(() => {\n        setRecorderState((prevState: Recorder) => {\n          if (\n            prevState.recordingMinutes === MAX_RECORDER_TIME &&\n            prevState.recordingSeconds === 0\n          ) {\n            typeof recordingInterval === \"number\" && clearInterval(recordingInterval);\n            return prevState;\n          }\n\n          if (prevState.recordingSeconds >= 0 && prevState.recordingSeconds < 59)\n            return {\n              ...prevState,\n              recordingSeconds: prevState.recordingSeconds + 1,\n            };\n          else if (prevState.recordingSeconds === 59)\n            return {\n              ...prevState,\n              recordingMinutes: prevState.recordingMinutes + 1,\n              recordingSeconds: 0,\n            };\n          else return prevState;\n        });\n      }, 1000);\n    else typeof recordingInterval === \"number\" && clearInterval(recordingInterval);\n\n    return () => {\n      typeof recordingInterval === \"number\" && clearInterval(recordingInterval);\n    };\n  });\n\n  useEffect(() => {\n    setRecorderState((prevState) => {\n      if (prevState.mediaStream)\n        return {\n          ...prevState,\n          mediaRecorder: new MediaRecorder(prevState.mediaStream),\n        };\n      else return prevState;\n    });\n  }, [recorderState.mediaStream]);\n\n  useEffect(() => {\n    const recorder = recorderState.mediaRecorder;\n    let chunks: Blob[] = [];\n\n    if (recorder && recorder.state === \"inactive\") {\n      recorder.start();\n\n      recorder.ondataavailable = (e: MediaRecorderEvent) => {\n        chunks.push(e.data);\n      };\n\n      recorder.onstop = () => {\n        const blob = new Blob(chunks, { type: \"audio/ogg; codecs=opus\" });\n        chunks = [];\n        const audioUrl = window.name + \".ogg\";\n        const file = new File([blob],audioUrl,{type: \"audio/ogg\" });\n        const blobService = new BlobServiceClient(\n          `https://${storageAccountName}.blob.core.windows.net/?${sasToken}`\n        );\n        const containerClient: ContainerClient = blobService.getContainerClient(containerName);\n        const blobClient = containerClient.getBlockBlobClient(file.name);\n\n        // set mimetype as determined from browser with file upload control\n        const options = { blobHTTPHeaders: { blobContentType: file.type } };\n\n        // upload file\n        blobClient.uploadData(file, options);\n     \n        console.log(\"recorderState.audio\");\n        console.log(window.name);\n        console.log(\"recorderState.audio end\");\n        setRecorderState((prevState: Recorder) => {\n          if (prevState.mediaRecorder)\n            return {\n              ...initialState,\n              audio: window.URL.createObjectURL(blob),\n            };\n          else return initialState;\n        });\n      };\n    }\n\n    return () => {\n      if (recorder) recorder.stream.getAudioTracks().forEach((track: AudioTrack) => track.stop());\n    };\n  }, [recorderState.mediaRecorder]);\n\n  return {\n    recorderState,\n    startRecording: () => startRecording(setRecorderState),\n    cancelRecording: () => setRecorderState(initialState),\n    saveRecording: () => saveRecording(recorderState.mediaRecorder),\n  };\n}\n","import React, { useState, Component } from 'react';\nimport RecorderControls from \"./recorder-controls\";\nimport { createStyles,makeStyles,Typography,Paper,Button,TextField, MenuItem } from '@material-ui/core';\nimport useRecorder from \"../hooks/use-recorder\";\nimport { UseRecorder } from \"types/recorder\";\nimport \"app.css\";\nimport SurroundSound from '@material-ui/icons/SurroundSound';\nimport SavePref from '@material-ui/icons/Save';\nimport { AudioConfig, SpeechConfig, SpeechRecognizer, SpeechSynthesizer } from 'microsoft-cognitiveservices-speech-sdk';\nimport {AzureSASCredential, TableClient} from \"@azure/data-tables\";\nimport { BlobServiceClient, ContainerClient} from '@azure/storage-blob';\nimport * as dotenv from \"dotenv\";\nimport { Stream } from 'stream';\n\ndotenv.config();\n\nconst tablesUrl = `https://namesounds.table.core.windows.net/namesoundtbl`;\nconst sasToken = `?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupitfx&se=2022-06-04T11:04:15Z&st=2022-05-16T03:04:15Z&spr=https&sig=%2FE19l%2Fqu9HXhv4cC4B%2FKipxUWdSEF19J%2FrdKmnyYI%2Fg%3D`;\nconst storageAccountName = `namesounds`; \nconst containerName = `pref-sounds`;\n\nconst useStyles = makeStyles(() => createStyles({\n  form : {\n    display : \"flex\",\n    flexDirection : \"column\"\n  },\n\n  container:{\n    backgroundColor : \"#f2dedc\",\n    position : \"absolute\",\n    top : \"50%\",\n    left : \"50%\",\n    transform : \"translate(-50%,-50%)\",\n    padding : 30,\n    textAlign : \"center\"\n  },\n\n  title : {\n    margin : \"0px 0 20px 0\",\n    textAlign : \"center\"\n  },\n\n  button : {\n    margin:\"20px 0\",\n    color:\"#fff\"\n  },\n\n  sectionContainer : {\n    margingTop: 2,\n    paddingHorizontal: 24,\n  },\n\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 500,\n  },\n\n}))\n\n//const storageConfigured = isStorageConfigured();\nexport default function App() {\n  const { recorderState, ...handlers }: UseRecorder = useRecorder();\n  const { audio } = recorderState;\n  const classes = useStyles();\n\n  type Values = {\n    dname : string,\n    empid : string,\n    fname : string,\n    lname : string,\n    pname: string,\n    country: string,\n    fileURL: string\n  }\n\n  const [values,setValues] = useState<Values>({\n    dname : \"\",\n    empid : \"\",\n    fname : \"\",\n    lname : \"\",\n    pname : \"\",\n    country : \"\",\n    fileURL : \"\"\n  });\n\n  const [blobList, setBlobList] = useState<string[]>([]);\n  const [locale, setLocale] = useState(\"\");\n  const [recordState, setRecordState] = useState(null);\n\n  const handleSelectChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n    setLocale(event.target.value);\n  };\n\n  const handleChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n    setValues({...values,[event.target.id] : event.target.value});\n    window.name = values.empid;\n  }\n\n  const countries = [\n    {value : \"en-US\", label : \"English (United States)\"},\n    {value : \"fr-CA\", label : \"French (Canada)\"},\n    {value : \"zh-CN\", label : \"Chinese (Mandarin, Simplified)\"},\n    {value : \"nl-NL\", label : \"Dutch (Netherlands)\"},\n    {value : \"en-GB\", label : \"English (United Kingdom)\"},\n    {value : \"fr-FR\", label : \"French (France)\"},\n    {value : \"de-DE\", label : \"German (Germany)\"},\n    {value : \"el-GR\", label : \"Greek (Greece)\"},\n    {value : \"hi-IN\", label : \"Hindi (India)\"},\n    {value : \"ja-JP\", label : \"Japanese (Japan)\"},\n    {value : \"pl-PL\", label : \"Polish (Poland)\"},\n    {value : \"ru-RU\", label : \"Russian (Russia)\"},\n    {value : \"es-US\", label : \"Spanish (US)\"},\n    {value : \"ta-IN\", label : \"Tamil (India)\"},\n    {value : \"zu-ZA\", label : \"Zulu (South Africa)\"}\n  ]\n\n  const ttsToSpeaker = async () => {\n    const speechConfig = SpeechConfig.fromSubscription('00a6226c69b342d1b527d2df85266637','eastus');\n    speechConfig.speechSynthesisLanguage = locale;\n    const audioConfig = AudioConfig.fromDefaultSpeakerOutput();\n    const synthesizer = new SpeechSynthesizer(speechConfig,audioConfig);\n    var namepref = \"\";\n    if(values.pname.trim() == '')\n    {\n      namepref = values.fname + \" \" + values.lname;\n    }\n    else\n    {\n      namepref = values.pname;\n    }\n    synthesizer.speakTextAsync(namepref,\n      (result) => {\n        return result.audioData;\n      }\n    );\n  }\n\n  interface Entity{\n    partitionKey: string;\n    rowKey: string;\n    FirstName: string;\n    LastName: string;\n    PreferredName:string;\n    Locale: string;\n    NameSoundUrl: string\n  }\n\n  /*\n  *\n  * Updates and upserts entities in a table\n  */\n  async function updateAndUpsertEntities(){\n    console.log(\"== Updates and Upsert Entities ==\");\n    \n    const tableName = `namesoundtbl`;\n\n    const client = new TableClient(`${tablesUrl}` ,tableName, new AzureSASCredential(sasToken));\n\n    const entity: Entity = {\n      partitionKey: \"CTO\",\n      rowKey: values.empid,\n      FirstName: values.fname,\n      LastName: values.lname,\n      PreferredName: values.pname,\n      Locale: locale,\n      NameSoundUrl: \"\",\n    };\n    try{\n      await client.createEntity(entity);\n    }\n    catch(err){\n      console.log(err);\n    }\n    \n  }\n\n  const savePreference = async () => {\n    await updateAndUpsertEntities();\n    const blobService = new BlobServiceClient(\n      `https://${storageAccountName}.blob.core.windows.net/?${sasToken}`\n    );\n    const containerClient: ContainerClient = blobService.getContainerClient(containerName);\n    const toBlobName = values.empid.toString() + '.ogg';\n    const tempBlobName = \"tempPref.ogg\";\n    \n    const sourceBlob = containerClient.getBlockBlobClient(tempBlobName);\n    const targetBlob = containerClient.getBlockBlobClient(toBlobName);\n\n    console.log(window.name);\n    //targetBlob.syncUploadFromURL((await sourceBlob.generateSasUrl()).toString);\n  }\n\n  return (\n    <div className={classes.sectionContainer}>\n      <div className={classes.title}><h1>My Name Is...</h1></div>\n\n          <div className=\"{classes.form}\"> \n              <section className=\"voice-recorder\">\n              <TextField onChange={handleChange} defaultValue=\"CTO\" label={\"Department Name\"} id={\"dname\"}/>  \n              <TextField onChange={handleChange} label={\"Employee Id\"} id={\"empid\"}/>  \n              <TextField onChange={handleChange} label={\"First Name\"} id={\"fname\"}/>  \n              <TextField onChange={handleChange} label={\"Last Name\"} id={\"lname\"}/>      \n              <TextField onChange={handleChange} label={\"Preferred Name\"} id={\"pname\"}/>\n              \n              <TextField select onChange={handleSelectChange} id={\"locale\"} label=\"Select\" variant=\"standard\" helperText=\"Please select your locale\">\n                {countries.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField> \n              <div>  \n              <br/>\n              <Button startIcon={<SurroundSound/>} className=\"recorder-container\" onClick={ttsToSpeaker} color=\"primary\" variant=\"contained\">Suggested Pronunciation</Button>\n            </div>\n              <br></br>\n              <h4>Don't like the usual? Record your own...</h4>\n              <div className=\"recorder-container\">\n                <br/>\n                <RecorderControls recorderState={recorderState} handlers={handlers} />\n              </div>\n              <br></br>\n              <br></br>\n              <div>\n                <Button startIcon={<SavePref/>} className=\"recorder-container\" onClick={savePreference} color=\"primary\" variant=\"contained\" >Save Your Preference</Button> \n              </div>\n            </section>\n            </div>\n           \n      </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport { createStyles,makeStyles,Button,TextField, IconButton } from '@material-ui/core';\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport \"app.css\";\nimport {AzureSASCredential, TableClient, odata} from \"@azure/data-tables\";\nimport { AudioConfig, SpeechConfig, SpeechRecognizer, SpeechSynthesizer } from 'microsoft-cognitiveservices-speech-sdk';\nimport StdSurroundSound from '@material-ui/icons/SurroundSoundOutlined';\nimport SearchIcon from '@material-ui/icons/SearchSharp';\n\nconst tablesUrl = `https://namesounds.table.core.windows.net/`;\nconst sasToken = `?sv=2020-08-04&ss=bfqt&srt=sco&sp=rwdlacupitfx&se=2022-06-04T11:04:15Z&st=2022-05-16T03:04:15Z&spr=https&sig=%2FE19l%2Fqu9HXhv4cC4B%2FKipxUWdSEF19J%2FrdKmnyYI%2Fg%3D`;\nconst storageAccountName = `namesounds`; \nconst containerName = `pref-sounds`;\n\nconst useStyles = makeStyles(() => createStyles({\n    form : {\n      display : \"flex\",\n      flexDirection : \"column\"\n    },\n  \n    container:{\n      backgroundColor : \"#f2dedc\",\n      position : \"absolute\",\n      top : \"50%\",\n      left : \"50%\",\n      transform : \"translate(-50%,-50%)\",\n      padding : 30,\n      textAlign : \"center\"\n    },\n  \n    title : {\n      margin : \"0px 0 20px 0\",\n      textAlign : \"center\"\n    },\n  \n    button : {\n      margin:\"20px 0\",\n      color:\"#fff\"\n    },\n  \n    sectionContainer : {\n      margingTop: 2,\n      paddingHorizontal: 24,\n    },\n  \n    sectionTitle: {\n      fontSize: 24,\n      fontWeight: 500,\n    },\n  \n  }))\n\nvar url='';\nfunction Search(){\n   \n    //var url = `https://namesounds.blob.core.windows.net/pref-sounds/tempPref.ogg?sp=racwdyt&st=2022-05-16T17:28:34Z&se=2022-05-17T01:28:34Z&spr=https&sv=2020-08-04&sr=b&sig=ShZrxfRxGJDwlrva7bA%2BuaIKSJGMsbgtMVi22FTvnWA%3D`;\n\n    const classes = useStyles();\n    const [locale, setLocale] = useState(\"\");\n    const [dname, setDeptName] = useState(\"\");\n    const [empid, setEmpId] = useState(\"\");\n    const [fname, setFirstName] = useState(\"\");\n    const [lname, setLastName] = useState(\"\");\n    const [pname, setPrefName] = useState(\"\");\n    const [searchstr, setSearchString] = useState(\"\");\n\n    const handleSearchChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setSearchString(event.target.value);\n      };\n\n    const handleLocaleChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setLocale(event.target.value);\n      };\n    \n    const handleDeptChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setDeptName(event.target.value);\n      };\n    \n    const handleEmpIdChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setEmpId(event.target.value);\n      };\n\n    const handleFNameChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setFirstName(event.target.value);\n      };\n\n    const handleLNameChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setLastName(event.target.value);\n      }; \n    \n    const handlePrefNameChange = (event : React.ChangeEvent<HTMLInputElement>) => {\n        setPrefName(event.target.value);\n      }; \n\n    interface Entity{\n        partitionKey: string;\n        rowKey: string;\n        FirstName: string;\n        LastName: string;\n        PreferredName:string;\n        Locale: string;\n        NameSoundUrl: string\n      }\n\n    const getResults = async () => {\n        \n        const tableName = `namesoundtbl`;\n        const client = new TableClient(`${tablesUrl}`,tableName, new AzureSASCredential(sasToken));\n        const qryName = \"Test1\"\n        const entity = await client.getEntity<Entity>(\"CTO\",searchstr);\n        console.log(entity.FirstName);\n        setLocale(entity.Locale);\n        setDeptName(entity.partitionKey);\n        setEmpId(entity.rowKey);\n        setFirstName(entity.FirstName);\n        setLastName(entity.LastName);\n        setPrefName(entity.PreferredName);\n        url = entity.NameSoundUrl;\n        console.log(url);\n    }\n\n    const ttsToSpeaker = async () => {\n      const speechConfig = SpeechConfig.fromSubscription('00a6226c69b342d1b527d2df85266637','eastus');\n      speechConfig.speechSynthesisLanguage = locale;\n      const audioConfig = AudioConfig.fromDefaultSpeakerOutput();\n      const synthesizer = new SpeechSynthesizer(speechConfig,audioConfig);\n      var namepref = \"\";\n      if(pname.trim() == '')\n      {\n        namepref = fname + \" \" + lname;\n      }\n      else\n      {\n        namepref = pname;\n      }\n      synthesizer.speakTextAsync(namepref,\n        (result) => {\n          return result.audioData;\n        }\n      );\n    }\n   \n    const playAudio = async () => {\n      //const url = `https://namesounds.blob.core.windows.net/pref-sounds/tempPref.ogg?sp=racwdyt&st=2022-05-16T17:28:34Z&se=2022-05-17T01:28:34Z&spr=https&sv=2020-08-04&sr=b&sig=ShZrxfRxGJDwlrva7bA%2BuaIKSJGMsbgtMVi22FTvnWA%3D`;\n      try{  \n        url = `https://${storageAccountName}.blob.core.windows.net/${containerName}/${empid}.ogg`;\n        const audio = new Audio(url);\n        try{\n          await audio.play();\n        }\n        catch(err)\n        {\n          ttsToSpeaker();\n        }\n        console.log(url);\n      }\n      catch(err)\n      {\n        console.log(err);\n      }\n    }\n    \n    return(\n        <div className={classes.sectionContainer}>\n        <div className={classes.title}><h1>Search Name Sounds</h1></div>\n  \n            <div className=\"{classes.form}\"> \n                <section className=\"searchContainer\">\n                <TextField \n                   fullWidth\n                   id=\"search\"\n                   variant=\"outlined\"\n                   onChange={handleSearchChange}\n                   value={searchstr}\n                   InputProps={{\n                       endAdornment: (\n                           <IconButton>\n                               <SearchOutlined></SearchOutlined>\n                           </IconButton>\n                       )\n                   }}\n                    />\n                     <br></br>\n                  <Button className=\"recorder-container\" startIcon={<SearchIcon/>} onClick={getResults} color=\"primary\" variant=\"contained\">Search</Button>\n                <br></br>\n                <h6>Department Name</h6> <TextField onChange={handleDeptChange} value={dname} id={\"dname\"}/>  \n                <h6 >Employee Id</h6><TextField onChange={handleEmpIdChange} value={empid} id={\"empid\"}/>  \n                <h6 >First Name</h6><TextField onChange={handleFNameChange} value={fname}  id={\"fname\"}/>  \n                <h6 >Last Name</h6><TextField onChange={handleLNameChange} value={lname} id={\"lname\"}/>      \n                <h6 >Preferred Name</h6><TextField onChange={handlePrefNameChange} value={pname} id={\"pname\"}/>\n                <h6>Locale</h6><TextField onChange={handleLocaleChange} value={locale} id={\"locale\"}/>\n                <br></br>\n                <Button className=\"recorder-container\" startIcon={<StdSurroundSound/>} onClick={playAudio} color=\"primary\" variant=\"contained\">Standard Pronunciation</Button>\n                </section>\n            </div>\n        </div>\n    )\n}\nexport default Search;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.css\";\nimport App from \"components/App\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport {\n  Navigation,\n  Home,\n  Search\n} from \"./components\";\n\nwindow.name = \"test123\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Navigation/>\n        <Routes>\n          <Route path=\"/\" element={<Home/>}/>\n          <Route path=\"/search\" element={<Search/>}/>\n        </Routes>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}